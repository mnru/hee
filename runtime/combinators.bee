-- [f] u == [f] f
: u
  dup apply ;

-- Recursive definition of Y
-- [f] y' == [[f] y'] f
: y'
  dup quote [y'] compose swap apply ;

-- Non-recursive definition of Y
-- [f] y == [[f] [y] u] f
: y
  [quote [u] compose over quote swap compose swap apply] u ;

: twice
  dup compose apply ;

: times'
  swap dup zero? [pop pop pop] [1- [[dup [apply] dip] dip] dip swap apply] if ;

: times
  [times'] y ;

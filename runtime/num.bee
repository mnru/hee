: even?
  2 % 0 == ;

: odd?
  2 % 1 == ;

: !'
  swap dup 1 == [pop pop] [-1 + dup dig [[*] dip] dip apply] if ;

: !
  dup 0 > [dup [!'] y some] [pop none] if ;

: /%
  dup2 % [/] dip ;

: %/
  dup2 / [%] dip ;

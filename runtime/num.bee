:: num-dict
 | num-dict + - * / %
 ;

: +
  [pop pop pop pop] unnum-dict apply ;

: -
  [pop pop pop [pop] dip] unnum-dict apply ;

: *
  [pop pop [pop pop] dip] unnum-dict apply ;

: /
  [pop [pop pop pop] dip] unnum-dict apply ;

: %
  [[pop pop pop pop] dip] unnum-dict apply ;

: num-int
  [int-add]
  [int-sub]
  [int-mul]
  [int-div]
  [int-mod]
  num-dict ;

: num-float
  [float-add]
  [float-sub]
  [float-mul]
  [float-div]
  [float-mod]
  num-dict ;

: even?
  2 % 0 == ;

: odd?
  2 % 1 == ;

: positive?
  0 > ;

: negative?
  0 < ;

: zero?
  0 == ;

: !'
  swap dup 1 == [pop pop] [1- dup dig [[*] dip] dip apply] if ;

: !
  dup positive? [dup [!'] y some] [pop none] if ;

: /%
  2dup % [/] dip ;

: %/
  2dup / [%] dip ;

: negate
  0 - ;

: abs
  dup positive? [id] [negate] if ;

: 1+
  1 + ;

: 1-
  1 - ;

